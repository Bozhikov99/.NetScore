@using Core.ViewModels.Tournament
@using Core.ViewModels.Team
@model TournamentDetailsModel

@{
    ViewData["Title"] = "Details";
    IEnumerable<ListTeamModel> teams = ViewBag.Teams;
}

<h1>Details</h1>

<div>
    <h4>Tournament</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
    </dl>
    @foreach (ListTeamModel t in teams)
    {
        <div style="background-color: @t.Color">
            <img src=@t.LogoUrl />
            <h3>@t.Name</h3>
        </div>
    }
</div>


@if (!Model.IsScheduled)
{
    <a asp-action="Schedule" asp-route-id=@Model.Id>Schedule</a>
}
else
{
    @foreach (var f in ViewBag.Fixtures)
    {
        ListTeamModel home = teams.First(t => t.Id == f.HomeTeamId);
        ListTeamModel away = teams.First(t => t.Id == f.AwayTeamId);
        <div class="row">
            <div class="col" style="background-color:@home.Color">
                <h2>@home.Name</h2>
            </div>
            <div class="col align-items-center">
                <a asp-action="LineUp" asp-route-homeId=@home.Id asp-route-awayId=@away.Id>
                <button>Play Match</button>
                </a>
            </div>
            <div class="col" style="background-color:@away.Color">
                <h2>@away.Name</h2>
            </div>
        </div>
    }
}
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
